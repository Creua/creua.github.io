{"version":3,"sources":["../../src/pages/edit-recipe/edit-recipe.module.ts","../../src/pages/edit-recipe/edit-recipe.ts"],"names":[],"mappings":"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","file":"4.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EditRecipe } from './edit-recipe';\n\n@NgModule({\n  declarations: [\n    EditRecipe,\n  ],\n  imports: [\n    IonicPageModule.forChild(EditRecipe),\n  ],\n  exports: [\n    EditRecipe\n  ]\n})\nexport class EditRecipeModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-recipe/edit-recipe.module.ts","import {Component, OnInit} from '@angular/core';\nimport {\n  ActionSheetController, AlertController, IonicPage, NavController, NavParams,\n  ToastController\n} from 'ionic-angular';\nimport {FormArray, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {RecipesService} from \"../../providers/recipes.service\";\nimport {Recipe} from \"../../models/recipe\";\n\ntype EditPageType = 'New' | 'Edit'\n\n@IonicPage()\n@Component({\n  selector: 'page-edit-recipe',\n  templateUrl: 'edit-recipe.html',\n})\nexport class EditRecipe implements OnInit {\n\n  public difficultyOptions: Array<string> = ['Easy', 'Medium', 'Hard'];\n\n  private mode: EditPageType = 'New';\n\n  public editRecipe: Recipe;\n  public editRecipeIndex: number;\n\n  public recipeForm: FormGroup;\n\n  constructor(public navParams: NavParams,\n              public actionSheetCtrl: ActionSheetController,\n              public alertCtrl: AlertController,\n              public toastCtrl: ToastController,\n              public recipesService: RecipesService,\n              public navCtrl: NavController) {}\n\n  ngOnInit() {\n    this.mode = this.navParams.get('mode');\n    if(this.mode === 'Edit') this.extractEditRecipeData();\n    this.initializeForm();\n  }\n\n  extractEditRecipeData() {\n    this.editRecipe = this.navParams.get('recipe');\n    this.editRecipeIndex = this.navParams.get('index')\n  }\n\n  private initializeForm() {\n    let title = null;\n    let description = null;\n    let difficulty = 'Medium';\n    let ingredients = [];\n\n    if(this.mode === 'Edit') {\n      title = this.editRecipe.title;\n      description = this.editRecipe.description;\n      difficulty = this.editRecipe.difficulty;\n      for (const ingredient of this.editRecipe.ingredients) {\n        const ingredientGroup = new FormGroup({\n          'name': new FormControl(ingredient.name, Validators.required),\n          'amount': new FormControl(ingredient.amount, Validators.required)\n        });\n        ingredients.push(ingredientGroup)\n      }\n    }\n\n    this.recipeForm = new FormGroup({\n      'title': new FormControl(title, Validators.required),\n      'description': new FormControl(description, Validators.required),\n      'difficulty': new FormControl(difficulty, Validators.required),\n      'ingredients': new FormArray(ingredients)\n    })\n  }\n\n  onSubmit() {\n    if(!this.recipeForm.valid) return;\n    this.mode === 'Edit' ?\n      this.recipesService.updateRecipe(this.editRecipeIndex, this.recipeForm.value) :\n      this.recipesService.addRecipe(this.recipeForm.value);\n    this.navCtrl.popToRoot();\n  }\n\n  onManageIngredients() {\n    const actionSheet = this.actionSheetCtrl.create({\n      title: 'What do you want to do?',\n      buttons: [\n        {\n          text: 'Add ingredient',\n          handler: () => {\n            this.createNewIngredient();\n          }\n        },\n        {\n          text: 'Remove all ingredients',\n          role: 'destructive',\n          handler: () => {\n            const formArray: FormArray = <FormArray> this.recipeForm.get('ingredients');\n            const len = formArray.length;\n            if( len > 0 ) {\n              for( let i = len -1; i >= 0; i--) {\n                formArray.removeAt(i);\n              }\n              this.showDeleteSuccessToast()\n            }\n          }\n        },\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        }\n      ]\n    });\n    actionSheet.present()\n  }\n\n  private createNewIngredient() {\n    const newIngredientAlert = this.alertCtrl.create({\n      title: 'Add ingredient',\n      inputs: [\n        {\n          name: 'name',\n          placeholder: 'Name',\n          type: 'text'\n        },\n        {\n          name: 'amount',\n          placeholder: 'Amount',\n          type: 'number'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel'\n        },\n        {\n          text: 'Add',\n          handler: ({name, amount}) => {\n            if(!name.trim() || !amount.trim()) {\n              this.showIngredientInvalidToast();\n              return;\n            }\n            (<FormArray>this.recipeForm.get('ingredients'))\n              .push(new FormGroup({\n                'name': new FormControl(name, Validators.required),\n                'amount': new FormControl(amount, Validators.required)\n              }));\n            this.showIngredientSuccessToast();\n          }\n        }\n      ]\n    });\n    newIngredientAlert.present();\n  }\n\n  showIngredientInvalidToast(): void {\n    const toast = this.toastCtrl.create({\n      message: 'Please enter a valid name and amount ',\n      duration: 2000\n    });\n    toast.present()\n  }\n\n  showIngredientSuccessToast(): void {\n    const toast = this.toastCtrl.create({\n      message: 'Ingredient was successfully added',\n      duration: 1000\n    });\n    toast.present()\n  }\n\n  showDeleteSuccessToast(): void {\n    const toast = this.toastCtrl.create({\n      message: 'Ingredients were successfully removed',\n      duration: 1000\n    });\n    toast.present()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-recipe/edit-recipe.ts"],"sourceRoot":""}